#include "goban.hsp"
#include "開発完了/sgf.hsp"
#include "treebox.hsp"
#include "namespace_base.hsp"

#module

//ツリーボックスに碁盤を同期させる関数
#deffunc sync_treebox_board var _treebox, var board

	logmes "current_node = " + get_current_node(_treebox)

	sgf_node_number = get_tree_item_id(get_current_node(_treebox))

	logmes "sgf_node_number = " + sgf_node_number
	
	if sgf_node_number < 0{
		logmes "ERROR-- 無効なノード番号です -> "+ sgf_node_number + "\n "  + __FILE__
		return
	}

	//トップノードまでたどってリスト化する関数
	get_nodelist sgf_node_number, nodelist

	set_board_topnode board, nodelist(length(nodelist)-1)

	//表示したいノードまでノードを着手する
	for i, length(nodelist)-2, -1, -1
		tmp = get_property_data(nodelist(i),"B")
		if tmp = "": tmp = get_property_data(nodelist(i), "W")
		if tmp != ""{
			x = peek(tmp,0) - 'a'
			y = peek(tmp,1) - 'a'
			着手 board, x, y
		}
	next
	
	return

//SGFトップノードを受け取り、ボードを初期化する関数
#deffunc set_board_topnode var board, int SGF_topnode

	if topnode < 0{
		dialog "エラー\n無効なノードが入力されました" ,,__FILE__
		end
	}

	size = get_property_data(SGF_topnode, "SZ")
	if stat = 0{
		logmes "SGFにボードサイズが設定されていません"
		x = 19
		y = 19
	}else{
		split size,":", x, y
		if stat = 1: y = x
	}
	clear_board board , int(x), int(y)
	
	return


#defcfunc load_sgf_set_board var _treebox, int node, var _board
	//SGFからツリー作成
	load_from_SGF_topnode _treebox, node
	set_current_node _treebox, stat
	sgf_topnode = node
	set_board_topnode _board, sgf_topnode

	return sgf_topnode


#defcfunc change_sgf str s1, var _treebox, var _board

　　title s1
	if get_value(s1) == NOT_DEFINED_HASH{
		notesel sgf_data
		noteload s1
		noteunsel
		
		if load_sgf(sgf_data,-1) >= 0{
			new_topnode = load_sgf_set_board(_treebox, stat, _board)
			new_value s1, str(new_topnode)
		}else{
			dialog "SGF_FILE解析エラー",,__FILE__
			end
		}
	}else{
		new_topnode = int(refstr)
		logmes "SGF_NODE -> " + new_topnode

		load_from_SGF_topnode _treebox, new_topnode
		set_current_node _treebox, stat
		
		set_board_topnode _board, new_topnode
	}
	
	return new_topnode
#global


