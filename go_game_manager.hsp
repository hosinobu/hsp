#include "goban.hsp"
#include "開発完了/sgf.hsp"
#include "tree.hsp"

#module

//gobanオブジェクト、表示したいsgfノード
#deffunc make_board_from_sgf var board, int sgf_node_number

	if sgf_node_number < 0{
		logmes "ERROR-- 無効なノード番号です -> "+ sgf_node_number + "\n "  + __FILE__
		return
	}

	//トップノードまでたどってリスト化する関数
	get_nodelist sgf_node_number, nodelist

	set_board_topnode board, nodelist(length(nodelist)-1)

	//表示したいノードまでノードを着手する
	for i, length(nodelist)-2, -1, -1
		tmp = get_property_data(nodelist(i),"B")
		if tmp = "": tmp = get_property_data(nodelist(i), "W")
		if tmp != ""{
			x = peek(tmp,0) - 'a'
			y = peek(tmp,1) - 'a'
			着手 board, x, y
		}
	next
	
	return

//SGFのトップノードに合わせてボードを初期化する関数
#deffunc set_board_topnode var board, int topnode

	if topnode < 0: return

	size = get_property_data(get_tree_item_id(topnode), "SZ")
	if stat = 0{
		logmes "SGFにボードサイズが設定されていません"
		x = 19
		y = 19
	}else{
		split size,":", x, y
		if stat = 1: y = x
	}
	clear_board board , int(x), int(y)
	
	return
#global


#module treebox tree_data, topnode, current_node, treenode_id_list, onmouse_id

#modinit
	current_node = -1
	topnode = -1
	onmouse_id = -1
	dim treenode_id_list, 10000
	repeat length(treenode_id_list)
		treenode_id_list(cnt) = -1
	loop
	return
#modfunc init_treebox_item

	return
#modfunc set_current_node int p1, local i
	i = p1 != current_node
	current_node = p1
	return i
	
#modcfunc get_current_node
	return current_node
	
#modfunc treebox_insertItem int item_id, int parent_item_id
	if item_id < 0: return -1

	if parent_item_id >= 0{
		parent_id = treenode_id_list(parent_item_id)
	}else{
		parent_id = -1
	}

	if treenode_id_list(item_id) == -1{
		make_treenode parent_id, item_id
    	treenode_id_list(item_id) = stat
    }
    
    logmes "maketreenode-- 親アイテムID" + parent_id + "　子アイテムID "+stat +"  item_id =" + item_id

	if topnode < 0: topnode = item_id
	return item_id

#modfunc treebox_draw int p1
	if p1 >= 0{
		tree_view treenode_id_list(p1), -1, -1, -1
		onmouse_id = treeview_onmouse_id()
	}
	return

#modcfunc treebox_onmouseid
	return onmouse_id
	
#modfunc treebox_toggle_openflag int p1
	toggle_openflag treenode_id_list(p1)
	return


#modfunc treebox_clear
	cut_node topnode
	current_node = -1
	topnode = -1
	onmouse_id = -1
		dim treenode_id_list, 10000
	repeat length(treenode_id_list)
		treenode_id_list(cnt) = -1
	loop
	return topnode
	
#modfunc load_from_SGF_topnode int SGF_topnode

	stack = SGF_topnode ; 現在のノード番号
	stack_p = -1    ; 親ノード番号
	sn = 1
	
	while sn
		sn--
		;現ノードをツリーに追加
		nnode = stack(sn)
		pnode = stack_p(sn)
		Treebox_InsertItem thismod, nnode, pnode
		
		//子ノードを全部積む。
		repeat get_SGF_childs(nnode, childlist)
			stack(sn) = childlist(cnt)
			stack_p(sn) = nnode
			sn++
		loop

	wend

	//カレントノードをトップノードに移動
	set_current_node thismod, SGF_topnode
	
	return topnode

#global